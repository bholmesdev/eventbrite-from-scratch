---
import QuantityPrice from "../../components/Price";
import Layout from "../../layouts/Layout.astro";
import { z } from "astro/zod";

const event = await Astro.locals.runtime.env.DB.prepare(
  "SELECT * FROM events WHERE id = ?"
)
  .bind(Astro.params.event)
  .first();

if (!event) return Astro.redirect("/404");

const ticketForm = await Astro.locals.form.getData({
  email: z.string().email(),
  quantity: z.number(),
});

if (ticketForm?.success) {
  await Astro.locals.runtime.env.DB.prepare(
    "INSERT INTO tickets (event_id, email, quantity) VALUES (?, ?, ?)"
  )
    .bind(Astro.params.event, ticketForm.data.email, ticketForm.data.quantity)
    .run();
}

const Tag = tag();

export const error = scope("error");
export const success = scope("success");
---

<Layout title="Welcome to Astro.">
  <Tag class="test">
    <main>
      <h1>{event.name}</h1>
      <p>
        {event.description}
      </p>

      <div class="error" data-target={target(Tag, "error")}></div>

      <form onsubmit={call(Tag, "handleSubmit")}>
        <QuantityPrice client:load price={event.ticket_price as number} />

        <label for="email">Email</label>
        <input type="email" id="email" name="email" />

        <button>Buy tickets</button>

        <button onclick={call(Tag, "handleDelete")}></button>
      </form>
      <div class="youre-going" data-target={target(Tag, "success")}></div>
    </main>
  </Tag>
</Layout>

<script>
  import { tag, target, controller } from "simple:web";
  import { html } from "simple:html";

  @controller(tag())
  class El extends HTMLElement {
    @target error: HTMLElement;
    @target success: HTMLElement;
    handleSubmit() {
      const { body, ok } = html.post("/[event]/purchase");
      if (!ok) return (this.error.innerHTML = body);
      this.success.innerHTML = body;
    }
    handleDelete() {
      const { ok } = html.delete("/[event]/delete");
      if (ok) {
        Toastify({
          text: message,
          duration,
        }).showToast();
      }
    }
  }
</script>

<style>
  main {
    max-width: 600px;
    margin: 0 auto;
    padding: var(--size-4);
  }

  form {
    display: flex;
    flex-direction: column;
    gap: var(--size-2);
    margin-bottom: var(--size-4);
    background: var(--surface-2);
    padding: var(--size-2);
    border-radius: var(--radius-2);
  }

  .error {
    color: var(--red-6);
    margin-bottom: var(--size-2);
    grid-column: 1 / -1;
  }

  form button {
    grid-column: 1 / -1;
    background: var(--orange-8);
    border-radius: var(--radius-2);
  }

  .youre-going {
    background: var(--surface-2);
    padding: var(--size-2);
  }

  h2 {
    font-size: var(--font-size-4);
    margin-bottom: var(--size-2);
  }
</style>
